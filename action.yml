name: "rgl"
description: "Bedrock Addons compiler pipeline."
inputs:
  profile:
    description: "profile to run"
    default: "default"
    required: false
  github_token:
    description: "GitHub Token for getting private filters"
    default: ""
    required: false
  nodejs_runtime:
    description: "Node.js runtime"
    default: "node"
    required: false
    type: choice
    options:
      - "node"
      - "bun"
  resolvers:
    description: "Resolvers to use"
    default: "github.com/Bedrock-OSS/regolith-filter-resolver/resolver.json"
    required: false

runs:
  using: "composite"
  steps:
    - name: setup-git-credentials
      uses: de-vri-es/setup-git-credentials@v2.0.8
      if: ${{ inputs.github_token != '' }}
      with:
        credentials: https://user:${{ inputs.github_token }}@github.com/
    - name: deno
      uses: denoland/setup-deno@v1
      with:
        deno-version: vx.x.x
    - name: go
      uses: actions/setup-go@v4
      with:
        go-version: stable
    - name: bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest
    - name: list versions
      shell: bash
      run: |
        python --version
        node -v
        java -version
        deno --version
        dotnet --list-sdks
        go version
    - name: rgl
      shell: bash
      run: |
        curl -fsSL https://raw.githubusercontent.com/ink0rr/rgl/main/scripts/install.sh | sh
        mv $HOME/.rgl/bin/rgl /usr/local/bin/rgl
        chmod +x /usr/local/bin/rgl
    - name: userconfig
      shell: bash
      run: |
        rglCache=$HOME/.cache/rgl
        mkdir -p $rglCache
        JSON=$(jq -n --arg username "${{ github.actor }}" --argjson resolvers '["${{ inputs.resolvers }}"]' --arg nodejs_runtime "${{ inputs.nodejs_runtime }}" '{username: $username, resolvers: $resolvers, nodejs_runtime: $nodejs_runtime}')
        echo $JSON > $rglCache/user_config.json
    - name: install
      shell: bash
      run: rgl get
    - name: compile
      shell: bash
      run: rgl run ${{inputs.profile}}
